configure(allprojects) { project ->
    ext.jacksonversion = jacksonversion
    ext.mongodbversion = mongodbversion
    ext.projectVersion = PROJ_VERSION + '-' + PROJ_ARCHETYPE
    group = PROJ_GROUP
    version = ext.projectVersion
    apply plugin: "java"
    apply plugin: "maven-publish"
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "maven"
    eclipse {
        jdt {
            //if you want to alter the java versions (by default they are configured with gradle java plugin settings):
            sourceCompatibility = SOURCE_COMPILER_LEVEL
            targetCompatibility = TARGET_COMPILER_LEVEL
            javaRuntimeName = "../../org.eclipse.jdt.launching.JRE_CONTAINER"
        }
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = SOURCE_COMPILER_LEVEL
        targetCompatibility = TARGET_COMPILER_LEVEL
        options.encoding = 'UTF-8'
    }

    tasks.withType(Javadoc) {
        sourceCompatibility = JAVADOC_SOURCE_LEVEL
        targetCompatibility = JAVADOC_COMPILER_LEVEL
        options.encoding = 'UTF-8'
        if (JavaVersion.current().isJava8Compatible()) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    dependencies {
        testCompile 'junit:junit:4.12'
    }

    repositories {
        mavenLocal()
        maven {
            url 'http://bdp.sany.com.cn/nexus/content/groups/public/'
        }
    }

    if (project.getProperty('skipTest').equals("true")) {
        compileTestJava.enabled = false
        processTestResources.enabled = false
        testClasses.enabled = false
        test.enabled = false
    }
}

configure(subprojects) { subproject ->
    task sourcesJar(type: Jar) {
        classifier = "sources"
        from sourceSets.main.allJava
    }

    task javaDocJar(type: Jar, dependsOn: javadoc) {
        classifier = "javadoc"
        from javadoc.destinationDir
    }
    artifacts {
        archives sourcesJar, javaDocJar
    }

    /**
    uploadArchives {
        repositories {
            mavenDeployer {
                pom.project {
                    name project.name
                    version version
                    packaging 'jar'
                }
                repository(url: 'http://bdp.sany.com.cn/nexus/content/repositories/releases/') {
                    authentication(userName: 'sany', password: 'sany');
                }
                snapshotRepository(url: 'http://bdp.sany.com.cn/nexus/content/repositories/snapshots/') {
                    authentication(userName: 'sany', password: 'sany');
                }
            }
        }
    }
    */
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javaDocJar
            }
        }
        repositories {
            maven {
                credentials {
                    username 'sany'
                    password 'sany'
                }
                if(project.version.endsWith('-SNAPSHOT')) {
                    url 'http://bdp.sany.com.cn/nexus/content/repositories/snapshots/'
                } else {
                    url 'http://bdp.sany.com.cn/nexus/content/repositories/releases/'
                }
            }
        }
    }
}